package a.util;

import a.util.ListIterator;
import a.util.Iterable;

/**
 * An ordered collection.
 */
public abstract class List<E> extends Iterable<E> {
	/**
	 * The current size of this list.
	 */
	public abstract int size();
	
	/**
	 * Whether this list is empty.
	 */
	public abstract bool isEmpty();
	
	/**
	 * Removes all elements from this list.
	 */
	public abstract void clear();
	
	/**
	 * Gets the element at index.
	 * @param index The index.
	 * @return The element at index.
	 */
	public abstract E getIndex(int index);
	
	/**
	 * Sets the element at index.
	 * @param index The index.
	 * @param element The new element.
	 */
	public abstract void setIndex(int index, E element);
	
	/**
	 * Inserts an element at index.
	 * @param index The index.
	 * @param element The new element.
	 * @return Whether successful.
	 */
	public abstract bool addIndex(int index, E element);
	
	/**
	 * Removes the element at index.
	 * @param index The index.
	 * @return The element removed.
	 */
	public abstract E removeIndex(int index);
	
	/**
	 * Creates an iterator for this list.
	 * @return An iterator for this list.
	 */
	public abstract Iterator<E> getIterator();
	
	/**
	 * Creates a list iterator for this list initialized to just before the 
	 * first element.
	 * @return A list iterator for this list initialized to just before the 
	 * first element.
	 */
	public abstract ListIterator<E> getListIterator();
	
	/**
	 * Creates a list iterator for this list initialized to just after the 
	 * last element.
	 * @return A list iterator for this list initialized to just after the 
	 * last element.
	 */
	public abstract ListIterator<E> getListIteratorAtEnd();
	
	/**
	 * Creates a list iterator for this list initialized to just before the 
	 * specified index. A call to the iterator's next() method immediately after 
	 * it is returned will return the same element as getIndex(index).
	 * @param index the position at which to initialize the iterator.
	 * @return A list iterator for this list initialized to just before the 
	 * specified element.
	 */
	public abstract ListIterator<E> getListIteratorAt(int index);
}
